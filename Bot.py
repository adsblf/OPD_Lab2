from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InputFile
from give_me_photo_adres import give_me_photo_adress
from func_parser import call_parser
import os

def bot_func():
    if os.listdir("C:/Users/main/Desktop/OPD_Lab2/pic/"):
        print("–§–∞–π–ª—ã —É–∂–µ –µ—Å—Ç—å")
    else:
        call_parser()#–°–ø–∞—Ä—Å–∏—Ç—å 50 —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–∞ —Ö–æ—Å—Ç

    TOKEN_API = "5680512630:AAErrjnSsVXcBNj16grv_XIp9PkYNXiKemc"

    DESCRIPTION = """
    <b>MotivationBot</b> @OPD_Lab2_Motivation_Bot \n–≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–ª–∫–æ–º –Ω–∏—á–µ–≥–æ –Ω–µ —É–º–µ–µ—Ç. –í—Å—ë –Ω–∞ —á—Ç–æ –æ–Ω —Å–ø–æ—Å–æ–±–µ–Ω: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫—Ä—É—Ç–æ–π —Å—Ç–∏–∫–µ—Ä –∏–ª–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ü–∏—Ç–∞—Ç—É.
    """
    bot = Bot(TOKEN_API)
    dp = Dispatcher(bot)

    async def on_startup(_):
        print('–ë–æ—Ç –±—ã–ª –∑–∞–ø—É—â–µ–Ω!')

    @dp.message_handler(commands = 'start')
    async def start(massage: types.Message):
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons = ["help", "—Å—Ç–∏–∫–µ—Ä", "—Ü–∏—Ç–∞—Ç–∞"]
        keyboard.add(*buttons)
        await massage.answer(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=keyboard)


    @dp.message_handler(lambda message: message.text == "help")
    async def help_command(message: types.Message):
        await message.answer(text=DESCRIPTION, parse_mode="HTML")
        await message.delete()

    @dp.message_handler(lambda message: message.text == "—Å—Ç–∏–∫–µ—Ä")
    async def help_command(message: types.Message):
        await message.answer(text="–°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–π –∫—Ä—É—Ç–æ–π –∫—Ä–µ–Ω–¥–µ–ª—å —Å–∏–¥–∏—Ç üòé")
        await bot.send_sticker(message.from_user.id, sticker="CAACAgIAAxkBAAEI5yFkWOIg2m4t31HQbl6tNQEuVaKDWAACpyoAAmrr8UnbwlrsloFBHS8E")
        await message.delete()

    @dp.message_handler(lambda message: message.text == "—Ü–∏—Ç–∞—Ç–∞")
    async def help_command(message: types.Message):
        img = InputFile(give_me_photo_adress()[0])
        await bot.send_photo(chat_id=message.chat.id, photo=img)
        await message.delete()

    executor.start_polling(dp, on_startup=on_startup, skip_updates=True)